@model List<CampusLearn.Models.Resource>

@{
    ViewData["Title"] = "Resources";
    Layout = "_Layout";
    var isTutor = ViewBag.Role == "Tutor";
}

<link rel="stylesheet" href="~/css/resources.css" asp-append-version="true" />

<div class="resources-container">
    <!-- Header Section -->
    <div class="resources-header">
        <div class="header-content">
            <div class="header-text">
                <h1 class="resources-title">Learning Resources</h1>
                <p class="resources-subtitle">Access study materials, guides, and course resources</p>
            </div>
            <div class="header-badge">
                <div class="role-badge">
                    <i class="fas fa-user-circle me-2"></i>
                    @(isTutor ? "Tutor Access" : "Student Access")
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main class="resources-content">
        <!-- Upload Button for Tutors and Link Upload for Students -->
        @if (isTutor)
        {
            <div class="section-card">
                <div class="section-header">
                    <div class="section-title">
                        <div class="title-icon bg-blue-100 text-blue-600">
                            <i class="fas fa-cloud-upload-alt"></i>
                        </div>
                        <div>
                            <h2>Resource Management</h2>
                            <p class="section-description">Upload and manage learning materials for students</p>
                        </div>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#uploadModal">
                            <i class="fas fa-upload me-1"></i>Upload File
                        </button>
                        <a asp-controller="Resource" asp-action="LinkUpload" class="btn btn-outline-primary">
                            <i class="fas fa-link me-1"></i>Upload Link
                        </a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- Upload Button for Students (Links Only) -->
            <div class="section-card">
                <div class="section-header">
                    <div class="section-title">
                        <div class="title-icon bg-blue-100 text-blue-600">
                            <i class="fas fa-cloud-upload-alt"></i>
                        </div>
                        <div>
                            <h2>Upload Resources</h2>
                            <p class="section-description">Share helpful links with your classmates</p>
                        </div>
                    </div>
                    <a asp-controller="Resource" asp-action="LinkUpload" class="btn btn-primary">
                        <i class="fas fa-link me-1"></i>Upload Link
                    </a>
                </div>
            </div>
        }
        <div class="list-group" id="resource-list">
            @if (!Model.Any())
            {
                <p id="no-resources-message" class="text-center text-muted mt-5">No resources have been uploaded yet.</p>
            }
            else
            {
                @foreach (var resource in Model)
                {
                    <div class="list-group-item flex-column align-items-start" id="resource-@resource.Id">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1 text-primary">@resource.Title</h5>
                            <small class="text-muted">@resource.UploadedAgo</small>
                        </div>
                        <p class="mb-2">@resource.Description</p>
                        <div class="d-flex w-100 justify-content-between align-items-center">
                            <small class="text-muted"><i class="bi bi-person-fill"></i> @resource.Author</small>
                            <div class="d-flex align-items-center gap-2">
                                <span class="badge bg-info text-dark">@resource.Type</span>
                                <span class="badge bg-secondary">@resource.FileType</span>
                                <a href="@resource.FileUrl" class="btn btn-outline-primary btn-sm" target="_blank"><i class="bi bi-eye-fill"></i> View</a>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
</div>

<!-- UPLOAD MODAL HTML -->
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">Upload New Resource</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="uploadForm">
                <div class="modal-body">
                    <div class="alert alert-danger d-none" role="alert" id="uploadErrorAlert"></div>
                    <div class="mb-3">
                        <label for="title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
<textarea class="form-control" id="description" name="Description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="author" class="form-label">Author</label>
                        <input type="text" class="form-control" id="author" name="Author" required>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="type" class="form-label">Resource Type</label>
                            <select class="form-select" id="type" name="Type">
                                <option>Study Guide</option>
                                <option>Notes</option>
                                <option>Video</option>
                                <option>Presentation</option>
                                <option>Research Paper</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="fileType" class="form-label">File Type</label>
                            <input type="text" class="form-control" id="fileType" name="FileType" placeholder="e.g., PDF, DOCX" required>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Resource</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
            document.addEventListener('DOMContentLoaded', function () {
                const uploadForm = document.getElementById('uploadForm');
                const resourceList = document.getElementById('resource-list');
                const uploadModalEl = document.getElementById('uploadModal');
                const uploadModal = new bootstrap.Modal(uploadModalEl);
                const errorAlert = document.getElementById('uploadErrorAlert');
                const submitButton = uploadForm.querySelector('button[type="submit"]');
                const originalSubmitButtonText = submitButton.innerHTML;

                // Resets the modal to a clean state
                function resetModalState() {
                    errorAlert.classList.add('d-none'); // Hide any error messages
                    errorAlert.textContent = '';
                    submitButton.innerHTML = originalSubmitButtonText; // Reset button text
                    submitButton.disabled = false;
                }

                // Add event listener to reset the modal whenever it's closed
                uploadModalEl.addEventListener('hidden.bs.modal', function () {
                    resetModalState();
                    uploadForm.reset();
                });

                // Handle the form submission
                uploadForm.addEventListener('submit', function (event) {
                    event.preventDefault(); // Stop the form from reloading the page
                    // Provide user feedback and prevent multiple clicks
                    submitButton.disabled = true;
                    submitButton.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...`;
                    errorAlert.classList.add('d-none');

                    // Send the form data to the server
                    fetch('/Resources/Upload', {
                        method: 'POST',
                        body: new FormData(uploadForm)
                    })
                    .then(response => {
                        if (!response.ok) {
                            // If server returns an error, throw to trigger the .catch block
                            return response.json().then(errorData => { throw new Error(JSON.stringify(errorData.errors)); });
                        }
                        return response.json(); // If successful, parse the new resource data
                    })
                    .then(newResource => {
                        // Remove the "No resources" message if it exists
                        const noResourcesMessage = document.getElementById('no-resources-message');
                        if (noResourcesMessage) {
                            noResourcesMessage.remove();
                        }

                        // Create the HTML for the new resource item
                        const resourceHtml = `
        <div class="list-group-item flex-column align-items-start" id="resource-${newResource.id}">
        <div class="d-flex w-100 justify-content-between">
        <h5 class="mb-1 text-primary">${newResource.title}</h5>
        <small class="text-muted">just now</small>
        </div>
        <p class="mb-2">${newResource.description}</p>
        <div class="d-flex w-100 justify-content-between align-items-center">
        <small class="text-muted"><i class="bi bi-person-fill"></i> ${newResource.author}</small>
        <div class="d-flex align-items-center gap-2">
        <span class="badge bg-info text-dark">${newResource.type}</span>
        <span class="badge bg-secondary">${newResource.fileType}</span>
        <a href="${newResource.fileUrl}" class="btn btn-outline-primary btn-sm" target="_blank"><i class="bi bi-eye-fill"></i> View</a>
        </div>
        </div>
        </div>`;

                        // Add the new item to the top of the list
                        resourceList.insertAdjacentHTML('afterbegin', resourceHtml);

                        // Update the resource count badge
                        const countBadge = document.getElementById('resource-count-badge');
                        const currentCount = document.querySelectorAll('#resource-list .list-group-item').length;
                        countBadge.textContent = `${currentCount} resources`;

                        // Close the modal on success
                        uploadModal.hide();
                    })
                    .catch(error => {
                        console.error('Upload Error:', error);
                        // Show the error message inside the modal
                        errorAlert.textContent = 'An error occurred. Please check your input and try again.';
                        errorAlert.classList.remove('d-none');
                        // Reset the button to allow another attempt
                        submitButton.innerHTML = 'Try Again';
                        submitButton.disabled = false;
                    });
                });
            });
    </script>
}