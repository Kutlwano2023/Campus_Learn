@using Microsoft.AspNetCore.Identity
@inject UserManager<Users> UserManager

@{
    ViewData["Title"] = "Grade Management";
    Layout = "_Layout";

    var user = await UserManager.GetUserAsync(User);
    var fullName = user?.FullName ?? "Tutor";
}

<link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />

<div class="dashboard-container">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="header-content">
            <div class="header-text">
                <h1 class="dashboard-title">Grade Management</h1>
                <p class="dashboard-subtitle">Track and manage student grades and performance</p>
            </div>
            <div class="header-badge">
                <div class="role-badge">
                    <i class="fas fa-chart-bar me-2"></i>
                    <span id="gradeStats">Loading grade data...</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main class="dashboard-content">
        <div class="dashboard-grid">
            <!-- Left Column - Gradebook & Grading Interface -->
            <div class="main-column">
                <!-- Gradebook Overview -->
                <div class="section-card">
                    <div class="section-header">
                        <div class="section-title">
                            <h2>Gradebook</h2>
                            <p class="section-description">Overall student performance</p>
                        </div>
                        <div class="gradebook-controls">
                            <select class="form-select" id="subjectFilter">
                                <option value="all">All Subjects</option>
                                <option value="math">Mathematics</option>
                                <option value="science">Science</option>
                                <option value="english">English</option>
                            </select>
                            <select class="form-select" id="gradingPeriod">
                                <option value="current">Current Term</option>
                                <option value="quarter1">Quarter 1</option>
                                <option value="quarter2">Quarter 2</option>
                                <option value="semester1">Semester 1</option>
                            </select>
                        </div>
                    </div>
                    <div class="gradebook-table-container">
                        <table class="gradebook-table" id="gradebookTable">
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Subject</th>
                                    <th>Assignments</th>
                                    <th>Average</th>
                                    <th>Trend</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Grade data will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Bulk Grading -->
                <div class="section-card">
                    <div class="section-header">
                        <div class="section-title">
                            <h2>Bulk Grading</h2>
                            <p class="section-description">Grade multiple submissions at once</p>
                        </div>
                    </div>
                    <div class="bulk-grading-interface">
                        <div class="assignment-selector">
                            <label>Select Assignment:</label>
                            <select class="form-select" id="bulkAssignmentSelect">
                                <option value="">Choose assignment...</option>
                                <option value="1">Quadratic Equations Quiz</option>
                                <option value="2">Physics Lab Report</option>
                                <option value="3">Climate Change Essay</option>
                            </select>
                        </div>
                        <div class="submissions-list" id="bulkSubmissionsList">
                            <!-- Submissions for bulk grading will appear here -->
                        </div>
                        <div class="bulk-actions">
                            <button class="btn btn-outline" id="selectAllBtn">Select All</button>
                            <button class="btn btn-primary" id="applyGradeBtn" disabled>Apply Grade</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Statistics & Quick Actions -->
            <div class="sidebar-column">
                <!-- Grade Distribution -->
                <div class="section-card">
                    <div class="section-header">
                        <h2>Grade Distribution</h2>
                        <p class="section-description">Current term performance</p>
                    </div>
                    <div class="grade-distribution">
                        <div class="distribution-bar">
                            <div class="distribution-segment a" style="width: 25%">
                                <span>A (90-100%)</span>
                                <span>25%</span>
                            </div>
                            <div class="distribution-segment b" style="width: 35%">
                                <span>B (80-89%)</span>
                                <span>35%</span>
                            </div>
                            <div class="distribution-segment c" style="width: 25%">
                                <span>C (70-79%)</span>
                                <span>25%</span>
                            </div>
                            <div class="distribution-segment d" style="width: 10%">
                                <span>D (60-69%)</span>
                                <span>10%</span>
                            </div>
                            <div class="distribution-segment f" style="width: 5%">
                                <span>F (<60%)</span>
                                <span>5%</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Grading Statistics -->
                <div class="section-card">
                    <div class="section-header">
                        <h2>Grading Statistics</h2>
                        <p class="section-description">This week's grading activity</p>
                    </div>
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-icon bg-primary">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-value">24</div>
                                <div class="stat-label">Graded</div>
                            </div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon bg-warning">
                                <i class="fas fa-clock"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-value">8</div>
                                <div class="stat-label">Pending</div>
                            </div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon bg-success">
                                <i class="fas fa-chart-line"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-value">84%</div>
                                <div class="stat-label">Avg. Score</div>
                            </div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon bg-info">
                                <i class="fas fa-trending-up"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-value">+5%</div>
                                <div class="stat-label">Improvement</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick Grading Actions -->
                <div class="section-card">
                    <div class="section-header">
                        <h2>Quick Actions</h2>
                        <p class="section-description">Common grading tasks</p>
                    </div>
                    <div class="quick-actions">
                        <a href="#" class="action-item" id="exportGrades">
                            <div class="action-icon bg-primary">
                                <i class="fas fa-download"></i>
                            </div>
                            <div class="action-content">
                                <h4>Export Grades</h4>
                                <p>Download grade reports</p>
                            </div>
                            <i class="fas fa-chevron-right action-arrow"></i>
                        </a>
                        <a href="#" class="action-item" id="gradeSettings">
                            <div class="action-icon bg-success">
                                <i class="fas fa-cog"></i>
                            </div>
                            <div class="action-content">
                                <h4>Grading Settings</h4>
                                <p>Configure grading scales</p>
                            </div>
                            <i class="fas fa-chevron-right action-arrow"></i>
                        </a>
                        <a href="#" class="action-item" id="missingGrades">
                            <div class="action-icon bg-warning">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div class="action-content">
                                <h4>Missing Grades</h4>
                                <p>View ungraded work</p>
                            </div>
                            <i class="fas fa-chevron-right action-arrow"></i>
                        </a>
                        <a href="#" class="action-item" id="gradeAnalytics">
                            <div class="action-icon bg-info">
                                <i class="fas fa-chart-pie"></i>
                            </div>
                            <div class="action-content">
                                <h4>Analytics</h4>
                                <p>Performance insights</p>
                            </div>
                            <i class="fas fa-chevron-right action-arrow"></i>
                        </a>
                    </div>
                </div>

                <!-- Recent Grade Updates -->
                <div class="section-card">
                    <div class="section-header">
                        <h2>Recent Updates</h2>
                        <p class="section-description">Latest grade entries</p>
                    </div>
                    <div class="activity-list">
                        <div class="activity-item">
                            <div class="activity-icon bg-success">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="activity-content">
                                <h4>Algebra Quiz graded</h4>
                                <p>Sarah Johnson - 92%</p>
                                <p class="activity-time">2 hours ago</p>
                            </div>
                        </div>
                        <div class="activity-item">
                            <div class="activity-icon bg-primary">
                                <i class="fas fa-edit"></i>
                            </div>
                            <div class="activity-content">
                                <h4>Grade updated</h4>
                                <p>Michael Brown - 85% → 88%</p>
                                <p class="activity-time">Yesterday</p>
                            </div>
                        </div>
                        <div class="activity-item">
                            <div class="activity-icon bg-warning">
                                <i class="fas fa-comment"></i>
                            </div>
                            <div class="activity-content">
                                <h4>Feedback added</h4>
                                <p>David Lee - Essay</p>
                                <p class="activity-time">2 days ago</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<!-- Grade Entry Modal -->
<div class="modal fade" id="gradeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Enter Grade</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="gradeForm">
                    <div class="grade-form-grid">
                        <div class="form-group">
                            <label class="form-label">Student</label>
                            <input type="text" class="form-control" id="gradeStudent" readonly>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Assignment</label>
                            <input type="text" class="form-control" id="gradeAssignment" readonly>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Score</label>
                            <input type="number" class="form-control" id="gradeScore" min="0" max="100" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Points</label>
                            <input type="number" class="form-control" id="gradePoints" value="100" min="1">
                        </div>
                        <div class="form-group full-width">
                            <label class="form-label">Feedback</label>
                            <textarea class="form-control" id="gradeFeedback" rows="3" placeholder="Add constructive feedback..."></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveGradeBtn">Save Grade</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Sample grade data
        const gradeData = [
            {
                studentId: 1,
                studentName: "Sarah Johnson",
                subject: "Mathematics",
                assignmentsCompleted: 8,
                averageGrade: 92,
                trend: "up",
                recentGrades: [92, 88, 95, 90]
            },
            {
                studentId: 2,
                studentName: "Michael Brown",
                subject: "Science",
                assignmentsCompleted: 6,
                averageGrade: 85,
                trend: "stable",
                recentGrades: [85, 82, 88, 85]
            },
            {
                studentId: 3,
                studentName: "David Lee",
                subject: "Programming",
                assignmentsCompleted: 5,
                averageGrade: 78,
                trend: "up",
                recentGrades: [75, 72, 80, 78]
            },
            {
                studentId: 4,
                studentName: "Emily Chen",
                subject: "Mathematics",
                assignmentsCompleted: 7,
                averageGrade: 95,
                trend: "stable",
                recentGrades: [95, 92, 98, 95]
            },
            {
                studentId: 5,
                studentName: "Alex Rodriguez",
                subject: "English",
                assignmentsCompleted: 4,
                averageGrade: 88,
                trend: "down",
                recentGrades: [90, 85, 88, 85]
            }
        ];

        document.addEventListener('DOMContentLoaded', function() {
            initializeGradeManagement();
        });

        function initializeGradeManagement() {
            loadGradebook();
            setupEventListeners();
            updateGradeStats();
        }

        function loadGradebook() {
            const tbody = document.querySelector('#gradebookTable tbody');
            tbody.innerHTML = '';

            gradeData.forEach(student => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <div class="student-cell">
                            <div class="student-avatar bg-primary">${student.studentName.split(' ').map(n => n[0]).join('')}</div>
                            <span>${student.studentName}</span>
                        </div>
                    </td>
                    <td>${student.subject}</td>
                    <td>${student.assignmentsCompleted}</td>
                    <td>
                        <div class="grade-cell">
                            <span class="grade-value ${getGradeClass(student.averageGrade)}">${student.averageGrade}%</span>
                        </div>
                    </td>
                    <td>
                        <div class="trend-cell">
                            <i class="fas fa-arrow-${student.trend} text-${getTrendColor(student.trend)}"></i>
                            <span>${getTrendText(student.trend)}</span>
                        </div>
                    </td>
                    <td>
                        <div class="action-cell">
                            <button class="btn btn-outline btn-sm" onclick="viewStudentGrades(${student.studentId})">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="btn btn-primary btn-sm" onclick="enterGrade(${student.studentId})">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function setupEventListeners() {
            // Filters
            document.getElementById('subjectFilter').addEventListener('change', filterGradebook);
            document.getElementById('gradingPeriod').addEventListener('change', filterGradebook);

            // Bulk grading
            document.getElementById('bulkAssignmentSelect').addEventListener('change', loadBulkSubmissions);
            document.getElementById('selectAllBtn').addEventListener('click', selectAllSubmissions);
            document.getElementById('applyGradeBtn').addEventListener('click', applyBulkGrade);

            // Quick actions
            document.getElementById('exportGrades').addEventListener('click', function(e) {
                e.preventDefault();
                showNotification('Exporting grade reports...', 'info');
            });

            document.getElementById('gradeSettings').addEventListener('click', function(e) {
                e.preventDefault();
                showNotification('Opening grading settings...', 'info');
            });

            document.getElementById('missingGrades').addEventListener('click', function(e) {
                e.preventDefault();
                showNotification('Showing missing grades...', 'info');
            });

            document.getElementById('gradeAnalytics').addEventListener('click', function(e) {
                e.preventDefault();
                showNotification('Loading grade analytics...', 'info');
            });

            // Grade modal
            document.getElementById('saveGradeBtn').addEventListener('click', saveGrade);
        }

        function filterGradebook() {
            const subject = document.getElementById('subjectFilter').value;
            const period = document.getElementById('gradingPeriod').value;

            const filtered = gradeData.filter(student => {
                const matchesSubject = subject === 'all' || student.subject.toLowerCase() === subject;
                // In a real app, you would also filter by grading period
                return matchesSubject;
            });

            // Reload table with filtered data
            const tbody = document.querySelector('#gradebookTable tbody');
            tbody.innerHTML = '';

            filtered.forEach(student => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${student.studentName}</td>
                    <td>${student.subject}</td>
                    <td>${student.assignmentsCompleted}</td>
                    <td>
                        <span class="grade-value ${getGradeClass(student.averageGrade)}">${student.averageGrade}%</span>
                    </td>
                    <td>
                        <i class="fas fa-arrow-${student.trend} text-${getTrendColor(student.trend)}"></i>
                        ${getTrendText(student.trend)}
                    </td>
                    <td>
                        <button class="btn btn-outline btn-sm" onclick="viewStudentGrades(${student.studentId})">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn btn-primary btn-sm" onclick="enterGrade(${student.studentId})">
                            <i class="fas fa-edit"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function loadBulkSubmissions() {
            const assignmentId = document.getElementById('bulkAssignmentSelect').value;
            const container = document.getElementById('bulkSubmissionsList');

            if (!assignmentId) {
                container.innerHTML = '<div class="no-submissions">Select an assignment to grade</div>';
                return;
            }

            // Sample submissions data
            const submissions = [
                { id: 1, studentName: "Sarah Johnson", submitted: true },
                { id: 2, studentName: "Michael Brown", submitted: true },
                { id: 3, studentName: "David Lee", submitted: false },
                { id: 4, studentName: "Emily Chen", submitted: true },
                { id: 5, studentName: "Alex Rodriguez", submitted: true }
            ];

            container.innerHTML = submissions.map(sub => `
                <div class="submission-item ${sub.submitted ? '' : 'not-submitted'}">
                    <label class="submission-checkbox">
                        <input type="checkbox" value="${sub.id}" ${!sub.submitted ? 'disabled' : ''}>
                        <span>${sub.studentName}</span>
                    </label>
                    <div class="submission-status">
                        ${sub.submitted ?
                            '<span class="status submitted">Submitted</span>' :
                            '<span class="status missing">Not Submitted</span>'
                        }
                    </div>
                    ${sub.submitted ? `
                    <div class="grade-input">
                        <input type="number" class="form-control" placeholder="Score" min="0" max="100">
                    </div>
                    ` : ''}
                </div>
            `).join('');

            // Enable/disable checkboxes based on submission status
            updateBulkGradingState();
        }

        function selectAllSubmissions() {
            const checkboxes = document.querySelectorAll('#bulkSubmissionsList input[type="checkbox"]:not(:disabled)');
            const allChecked = Array.from(checkboxes).every(cb => cb.checked);

            checkboxes.forEach(cb => {
                cb.checked = !allChecked;
            });
            updateBulkGradingState();
        }

        function updateBulkGradingState() {
            const hasSelected = document.querySelectorAll('#bulkSubmissionsList input[type="checkbox"]:checked').length > 0;
            document.getElementById('applyGradeBtn').disabled = !hasSelected;
        }

        function applyBulkGrade() {
            const selectedSubmissions = document.querySelectorAll('#bulkSubmissionsList input[type="checkbox"]:checked');
            const grades = [];

            selectedSubmissions.forEach(checkbox => {
                const submissionItem = checkbox.closest('.submission-item');
                const gradeInput = submissionItem.querySelector('.grade-input input');
                if (gradeInput && gradeInput.value) {
                    grades.push({
                        studentId: checkbox.value,
                        grade: parseInt(gradeInput.value)
                    });
                }
            });

            if (grades.length === 0) {
                showNotification('Please enter grades for selected submissions', 'warning');
                return;
            }

            showNotification(`Applied grades to ${grades.length} submissions`, 'success');
            // In real app, you would save these grades to your database
        }

        function enterGrade(studentId) {
            const student = gradeData.find(s => s.studentId === studentId);
            if (!student) return;

            document.getElementById('gradeStudent').value = student.studentName;
            document.getElementById('gradeAssignment').value = 'New Assignment';

            const modal = new bootstrap.Modal(document.getElementById('gradeModal'));
            modal.show();
        }

        function saveGrade() {
            const form = document.getElementById('gradeForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const gradeData = {
                student: document.getElementById('gradeStudent').value,
                assignment: document.getElementById('gradeAssignment').value,
                score: document.getElementById('gradeScore').value,
                points: document.getElementById('gradePoints').value,
                feedback: document.getElementById('gradeFeedback').value
            };

            showNotification(`Grade saved for ${gradeData.student}`, 'success');

            const modal = bootstrap.Modal.getInstance(document.getElementById('gradeModal'));
            modal.hide();

            // Reset form
            form.reset();
        }

        function viewStudentGrades(studentId) {
            showNotification(`Opening grade history for student ${studentId}`, 'info');
        }

        function getGradeClass(grade) {
            if (grade >= 90) return 'grade-a';
            if (grade >= 80) return 'grade-b';
            if (grade >= 70) return 'grade-c';
            if (grade >= 60) return 'grade-d';
            return 'grade-f';
        }

        function getTrendColor(trend) {
            return trend === 'up' ? 'success' : trend === 'down' ? 'error' : 'warning';
        }

        function getTrendText(trend) {
            return trend === 'up' ? 'Improving' : trend === 'down' ? 'Declining' : 'Stable';
        }

        function updateGradeStats() {
            const totalStudents = gradeData.length;
            const avgGrade = Math.round(gradeData.reduce((sum, student) => sum + student.averageGrade, 0) / totalStudents);
            document.getElementById('gradeStats').textContent =
                `${totalStudents} Students • ${avgGrade}% Average`;
        }

        // Add CSS for grade management
        const style = document.createElement('style');
        style.textContent = `
            .gradebook-controls {
                display: flex;
                gap: 1rem;
            }

            .gradebook-table-container {
                overflow-x: auto;
            }

            .gradebook-table {
                width: 100%;
                border-collapse: collapse;
            }

            .gradebook-table th,
            .gradebook-table td {
                padding: 0.75rem;
                text-align: left;
                border-bottom: 1px solid var(--border);
            }

            .gradebook-table th {
                background: var(--background);
                font-weight: 600;
                color: var(--text-secondary);
                font-size: 0.875rem;
            }

            .student-cell {
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

            .student-avatar {
                width: 2rem;
                height: 2rem;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 0.75rem;
                font-weight: 600;
            }

            .grade-cell {
                display: flex;
                align-items: center;
            }

            .grade-value {
                font-weight: 600;
                padding: 0.25rem 0.5rem;
                border-radius: var(--radius);
            }

            .grade-a { background: #dcfce7; color: #166534; }
            .grade-b { background: #dbeafe; color: #1e40af; }
            .grade-c { background: #fef3c7; color: #92400e; }
            .grade-d { background: #fef3c7; color: #92400e; }
            .grade-f { background: #fee2e2; color: #991b1b; }

            .trend-cell {
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

            .action-cell {
                display: flex;
                gap: 0.25rem;
            }

            .bulk-grading-interface {
                display: flex;
                flex-direction: column;
                gap: 1rem;
            }

            .assignment-selector {
                display: flex;
                align-items: center;
                gap: 1rem;
            }

            .submissions-list {
                display: flex;
                flex-direction: column;
                gap: 0.5rem;
                max-height: 300px;
                overflow-y: auto;
            }

            .submission-item {
                display: flex;
                align-items: center;
                gap: 1rem;
                padding: 0.75rem;
                border: 1px solid var(--border);
                border-radius: var(--radius);
            }

            .submission-item.not-submitted {
                background: #f8fafc;
                opacity: 0.6;
            }

            .submission-checkbox {
                display: flex;
                align-items: center;
                gap: 0.5rem;
                flex: 1;
            }

            .submission-status {
                min-width: 100px;
            }

            .status {
                padding: 0.25rem 0.5rem;
                border-radius: var(--radius);
                font-size: 0.75rem;
                font-weight: 600;
            }

            .status.submitted {
                background: #dcfce7;
                color: #166534;
            }

            .status.missing {
                background: #fef3c7;
                color: #92400e;
            }

            .grade-input {
                width: 80px;
            }

            .bulk-actions {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .grade-distribution {
                margin-top: 1rem;
            }

            .distribution-bar {
                display: flex;
                height: 40px;
                border-radius: var(--radius);
                overflow: hidden;
                margin-bottom: 1rem;
            }

            .distribution-segment {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 0.75rem;
                font-weight: 600;
                position: relative;
                transition: all 0.2s ease;
            }

            .distribution-segment:hover {
                transform: scale(1.05);
                z-index: 1;
            }

            .distribution-segment.a { background: #10b981; }
            .distribution-segment.b { background: #3b82f6; }
            .distribution-segment.c { background: #f59e0b; }
            .distribution-segment.d { background: #f97316; }
            .distribution-segment.f { background: #ef4444; }

            .distribution-segment span {
                line-height: 1.2;
            }

            .grade-form-grid {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 1rem;
            }

            .grade-form-grid .full-width {
                grid-column: 1 / -1;
            }

            .no-submissions {
                text-align: center;
                padding: 2rem;
                color: var(--text-muted);
                font-style: italic;
            }
        `;
        document.head.appendChild(style);
    </script>
}